name: CI Pipeline

on:
  push:
    branches:
      - deploy   # Run when code is pushed to deploy branch
  pull_request:
    branches:
      - deploy
  workflow_dispatch:   # Allows manual trigger

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}   # Add your Docker Hub username in GitHub secrets
          password: ${{ secrets.DOCKER_PASSWORD }}   # Add your Docker Hub password or access token in secrets

      # Step 3: Build & push client image
      - name: Build and push client image
        run: |
          docker build -f apps/app1/Dockerfile.client -t ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:client-${GITHUB_SHA} ./apps/app1
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:client-${GITHUB_SHA} ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:client-latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:client-${GITHUB_SHA}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:client-latest

      # Step 4: Build & push server image
      - name: Build and push server image
        run: |
          docker build -f apps/app1/Dockerfile.server -t ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:server-${GITHUB_SHA} ./apps/app1
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:server-${GITHUB_SHA} ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:server-latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:server-${GITHUB_SHA}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-hosting-sever:server-latest
